events {}

http {
  include       mime.types;
  default_type  application/octet-stream;

  # Upstreams match Docker Compose service names, which act as DNS names inside the container network
  upstream user {
    server user-service:8001;
  }

  upstream captain {
    server captain-service:8002;
  }

  upstream ride {
    server ride-service:8003;
  }

  upstream websocket {
    server websocket-server:8080;
  }

  server {
    listen 80;

    server_name distros.tech;

    # USER APIs
    location /api/user/ {
      proxy_pass http://user;
      proxy_set_header Host $host;
    }

    # CAPTAIN APIs
    location /api/captain/ {
      proxy_pass http://captain;
      proxy_set_header Host $host;
    }

    # RIDE APIs
    location /api/ride/ {
      proxy_pass http://ride;
      proxy_set_header Host $host;
    }

    # WebSocket server's REST endpoint for event notifications
    location /notify {
      proxy_pass http://websocket/notify/;
      proxy_set_header Host $host;
    }

    # WebSocket upgrade support
    location /ws/ {
      proxy_pass http://websocket;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
    }

    # Optional: Serve static frontend (if needed)
    # location / {
    #   root /usr/share/nginx/html;
    #   index index.html;
    # }

    # Catch-all
    location / {
      return 404;
    }
  }
}
